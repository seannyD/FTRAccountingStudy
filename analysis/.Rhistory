aes(x=long, y=lat, map_id=id),
color="black", fill="white", size=0.25)
gg + coord_map(xlim = c(-180, 180),ylim = c(-37, 90))
gg
gg + coord_map(xlim = c(-1.80e6, 1.80e6),ylim = c(-4e6, 9e6))
mapWorld <- map_data('world', wrap=c(-25,335), ylim=c(-55,75))
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group))
g$longitude <- ifelse(g$longitude < -25, g$longitude + 360, g$longitude)
mapWorld <- map_data('world', wrap=c(-25,335), ylim=c(-55,75))
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude))
g$Family = names(families)[match(g$family_id,families)]
table(g$Family)
setwd("~/Documents/Bristol/FTRAccounting/FTRAccountingStudy/analysis/")
library(maps)
library(ggplot2)
library(sp)
library(rworldmap)
g = read.csv("../data/raw/glottolog_languoid.csv/languoid.csv", stringsAsFactors = F,fileEncoding = "UTF-8",encoding = "UTF-8")
g = g[!is.na(g$latitude),]
families = c("aust1307","afro1255","atla1278","indo1319","sino1245","pama1250")
names(families) = c("Austronesian","Afro-Asiatic","Atlantic-Congo","Indo-European","Sino-Tibetan","Pama-Nyungan")
g = g[g$family_id %in% families,]
g$Family = names(families)[match(g$family_id,families)]
g$longitude <- ifelse(g$longitude < -25, g$longitude + 360, g$longitude)
mapWorld <- map_data('world', wrap=c(-25,335), ylim=c(-55,75))
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,fill=Family))
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family))
table(g$level)
g = g[g$level=="language",]
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family))
setwd("~/Documents/Bristol/FTRAccounting/FTRAccountingStudy/analysis/")
library(maps)
library(ggplot2)
library(sp)
library(rworldmap)
g = read.csv("../data/raw/glottolog_languoid.csv/languoid.csv", stringsAsFactors = F,fileEncoding = "UTF-8",encoding = "UTF-8")
g = g[!is.na(g$latitude),]
g = g[g$level=="language",]
families = c("aust1307","afro1255","atla1278","indo1319","sino1245","pama1250","turk1311")
names(families) = c("Austronesian","Afro-Asiatic","Atlantic-Congo","Indo-European","Sino-Tibetan","Pama-Nyungan","Turkic")
g = g[g$family_id %in% families,]
g$Family = names(families)[match(g$family_id,families)]
g$longitude <- ifelse(g$longitude < -25, g$longitude + 360, g$longitude)
mapWorld <- map_data('world', wrap=c(-25,335), ylim=c(-55,75))
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family))
setwd("~/Documents/Bristol/FTRAccounting/FTRAccountingStudy/analysis/")
library(maps)
library(ggplot2)
library(sp)
library(rworldmap)
g = read.csv("../data/raw/glottolog_languoid.csv/languoid.csv", stringsAsFactors = F,fileEncoding = "UTF-8",encoding = "UTF-8")
g = g[!is.na(g$latitude),]
g = g[g$level=="language",]
families = c("aust1307","afro1255","atla1278","indo1319","sino1245","pama1250","turk1311","utoa1244",'tupi1275')
names(families) = c("Austronesian","Afro-Asiatic","Atlantic-Congo","Indo-European","Sino-Tibetan","Pama-Nyungan","Turkic","Uto-Aztecan",'Tupian')
g = g[g$family_id %in% families,]
g$Family = names(families)[match(g$family_id,families)]
g$longitude <- ifelse(g$longitude < -25, g$longitude + 360, g$longitude)
mapWorld <- map_data('world', wrap=c(-25,335), ylim=c(-55,75))
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family))
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family)) +
scale_colour_brewer(palette = "Set1")
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family)) +
scale_colour_brewer(palette = "Set2")
?scale_color_viridis_c()
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family)) +
scale_colour_viridis_d()
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family)) +
scale_color_brewer()
?scale_color_brewer
scale_color_brewer(type="qual")
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family)) +
scale_color_brewer(type="qual")
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family)) +
scale_color_brewer(type="qual",palette = "Set2")
library(RColorBrewer)
brewer.pal(n = 8,name = "Set2")
brewer.pal(n = 9,name = "Set2")
pcols = c(brewer.pal(n = 8,name = "Set2"),"#FFFFFF")
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family)) +
scale_color_brewer(type="qual",palette = "Set2")
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family)) +
scale_color_manual(values=pcols)
?map_data
setwd("~/Documents/Bristol/FTRAccounting/FTRAccountingStudy/analysis/")
library(maps)
library(ggplot2)
library(sp)
library(rworldmap)
library(RColorBrewer)
g = read.csv("../data/raw/glottolog_languoid.csv/languoid.csv", stringsAsFactors = F,fileEncoding = "UTF-8",encoding = "UTF-8")
g = g[!is.na(g$latitude),]
g = g[g$level=="language",]
families = c("aust1307","afro1255","atla1278","indo1319","sino1245","pama1250","turk1311","utoa1244",'tupi1275')
names(families) = c("Austronesian","Afro-Asiatic","Atlantic-Congo","Indo-European","Sino-Tibetan","Pama-Nyungan","Turkic","Uto-Aztecan",'Tupian')
g = g[g$family_id %in% families,]
g$Family = names(families)[match(g$family_id,families)]
g$longitude <- ifelse(g$longitude < -25, g$longitude + 360, g$longitude)
mapWorld <- map_data('world', wrap=c(-25,335), ylim=c(-55,75), projection="gall")
pcols = c(brewer.pal(n = 8,name = "Set2"),"#FFFFFF")
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family)) +
scale_color_manual(values=pcols)
g$longitude <- ifelse(g$longitude < -25, g$longitude + 360, g$longitude)
mapWorld <- map_data('world', wrap=c(-25,335), ylim=c(-55,75), projection="gall",parameters=0)
pcols = c(brewer.pal(n = 8,name = "Set2"),"#FFFFFF")
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family)) +
scale_color_manual(values=pcols)
setwd("~/Documents/Bristol/FTRAccounting/FTRAccountingStudy/analysis/")
library(maps)
library(ggplot2)
library(sp)
library(rworldmap)
library(RColorBrewer)
g = read.csv("../data/raw/glottolog_languoid.csv/languoid.csv", stringsAsFactors = F,fileEncoding = "UTF-8",encoding = "UTF-8")
g = g[!is.na(g$latitude),]
g = g[g$level=="language",]
families = c("aust1307","afro1255","atla1278","indo1319","sino1245","pama1250","turk1311","utoa1244",'tupi1275')
names(families) = c("Austronesian","Afro-Asiatic","Atlantic-Congo","Indo-European","Sino-Tibetan","Pama-Nyungan","Turkic","Uto-Aztecan",'Tupian')
g = g[g$family_id %in% families,]
g$Family = names(families)[match(g$family_id,families)]
g$longitude <- ifelse(g$longitude < -25, g$longitude + 360, g$longitude)
mapWorld <- map_data('world', wrap=c(-25,335), ylim=c(-55,75), projection="gall",parameters=0)
pcols = c(brewer.pal(n = 8,name = "Set2"),"#FFFFFF")
ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family)) +
scale_color_manual(values=pcols)
nz <- map_data("nz")
# Prepare a map of NZ
nzmap <- ggplot(nz, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", colour = "black")
nzmap + coord_map("lambert", parameters = c(-37, -44))
nz <- map_data("world")
# Prepare a map of NZ
nzmap <- ggplot(nz, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", colour = "black")
nzmap + coord_map("lambert", parameters = c(-37, -44))
nzmap + coord_map("lambert", parameters = c(-25, 0))
nzmap + coord_map("gall", parameters = c(0))
nzmap + coord_map("gall", parameters = c(20))
?tiff
setwd("~/Documents/Bristol/FTRAccounting/FTRAccountingStudy/analysis/")
library(maps)
library(ggplot2)
library(sp)
library(rworldmap)
library(RColorBrewer)
g = read.csv("../data/raw/glottolog_languoid.csv/languoid.csv", stringsAsFactors = F,fileEncoding = "UTF-8",encoding = "UTF-8")
g = g[!is.na(g$latitude),]
g = g[g$level=="language",]
families = c("aust1307","afro1255","atla1278","indo1319","sino1245","pama1250","turk1311","utoa1244",'tupi1275')
names(families) = c("Austronesian","Afro-Asiatic","Atlantic-Congo","Indo-European","Sino-Tibetan","Pama-Nyungan","Turkic","Uto-Aztecan",'Tupian')
g = g[g$family_id %in% families,]
g$Family = names(families)[match(g$family_id,families)]
g$longitude <- ifelse(g$longitude < -25, g$longitude + 360, g$longitude)
mapWorld <- map_data('world', wrap=c(-25,335), ylim=c(-55,75), projection="gall",parameters=0)
pcols = c(brewer.pal(n = 8,name = "Set2"),"#FFFFFF")
lmap = ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family)) +
scale_color_manual(values=pcols)
tiff(filename="../results/map.tiff",res=600,width=8,height=4,units='in')
lmap
dev.off()
mapWorld <- map_data('world', wrap=c(-25,335), ylim=c(-55,75))
pcols = c(brewer.pal(n = 8,name = "Set2"),"#FFFFFF")
lmap = ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family)) +
scale_color_manual(values=pcols)
tiff(filename="../results/map.tiff",res=600,width=8,height=4,units='in')
lmap
dev.off()
setwd("~/Documents/Bristol/FTRAccounting/FTRAccountingStudy/analysis/")
library(maps)
library(ggplot2)
library(sp)
library(rworldmap)
library(RColorBrewer)
g = read.csv("../data/raw/glottolog_languoid.csv/languoid.csv", stringsAsFactors = F,fileEncoding = "UTF-8",encoding = "UTF-8")
g = g[!is.na(g$latitude),]
g = g[g$level=="language",]
families = c("aust1307","afro1255","atla1278","indo1319","sino1245","pama1250","turk1311","utoa1244",'tupi1275')
names(families) = c("Austronesian","Afro-Asiatic","Atlantic-Congo","Indo-European","Sino-Tibetan","Pama-Nyungan","Turkic","Uto-Aztecan",'Tupian')
g = g[g$family_id %in% families,]
g$Family = names(families)[match(g$family_id,families)]
g$longitude <- ifelse(g$longitude < -25, g$longitude + 360, g$longitude)
mapWorld <- map_data('world', wrap=c(-25,335), ylim=c(-55,75))
pcols = c(brewer.pal(n = 8,name = "Set2"),"#FFFFFF")
lmap = ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family)) +
scale_color_manual(values=pcols)
tiff(filename="../results/map.tiff",res=60,width=8,height=4,units='in')
lmap
dev.off()
?eps
setEPS()
postscript("../results/map.eps", width=7, height=4.2)
lmap
dev.off()
setEPS()
postscript("../results/map.eps", width=8, height=4.2)
lmap
dev.off()
head(g)
table(g$status)
table(g$iso639P3code)
sort(table(g$iso639P3code))
tail(sort(table(g$iso639P3code)))[1]
sort(table(g$iso639P3code),decreasing = T)
sort(table(g$iso639P3code),decreasing = T)[1]
nchar(sort(table(g$iso639P3code),decreasing = T)[1])
sum(g$iso639P3code=="   ")
sum(g$iso639P3code=="  ")
sum(g$iso639P3code==" ")
sum(g$iso639P3code=="")
setwd("~/Documents/Bristol/FTRAccounting/FTRAccountingStudy/analysis/")
library(maps)
library(ggplot2)
library(sp)
library(rworldmap)
library(RColorBrewer)
g = read.csv("../data/raw/glottolog_languoid.csv/languoid.csv", stringsAsFactors = F,fileEncoding = "UTF-8",encoding = "UTF-8")
g = g[!is.na(g$latitude),]
g = g[g$level=="language",]
g = g[g$status!="extinct",]
g = g[g$iso639P3code!="",]
families = c("aust1307","afro1255","atla1278","indo1319","sino1245","pama1250","turk1311","utoa1244",'tupi1275')
names(families) = c("Austronesian","Afro-Asiatic","Atlantic-Congo","Indo-European","Sino-Tibetan","Pama-Nyungan","Turkic","Uto-Aztecan",'Tupian')
g = g[g$family_id %in% families,]
g$Family = names(families)[match(g$family_id,families)]
g$longitude <- ifelse(g$longitude < -25, g$longitude + 360, g$longitude)
mapWorld <- map_data('world', wrap=c(-25,335), ylim=c(-55,75))
pcols = c(brewer.pal(n = 8,name = "Set2"),"#FFFFFF")
lmap = ggplot() +
geom_polygon(data = mapWorld, aes(x=long, y = lat, group = group)) +
geom_point(data = g, aes(x = longitude, y = latitude,colour=Family)) +
scale_color_manual(values=pcols)
setEPS()
postscript("../results/map.eps", width=8, height=4.2)
lmap
dev.off()
head(g$description)
table(g$description)
getMEText = function(r,ef, wald=NULL, showWald=F){
AIC = r[2,]$AIC
loglikDiff = signif(diff(r$logLik),2)
chi = round(r$Chisq[2],2)
df = r$`Chi Df`[2]
p = signif(r$`Pr(>Chisq)`[2],2)
wald.text = ""
if(!is.null(wald)){
est = signif(wald[1],2)
stder = signif(wald[2],2)
t = signif(wald[3],2)
wptext = ""
wald.text =  paste("beta = ",est,",")
if(showWald){
if(!is.na(wald[4])){
wptext = paste(", Wald p =",signif(wald[4],2))
}
wald.text = paste("beta = ",est,", std.err = ",stder, ", Wald t = ",t,wptext,';')
}
}
begin = 'There was no significant'
if(p <0.09){
begin = "There was a marginal"
}
if(p < 0.05){
begin = 'There was a significant'
}
return(paste(begin,ef,"(",wald.text,"log likelihood difference =",
loglikDiff,", df = ",df,", Chi Squared =", chi,", p = ",p,")."))
}
```
# Introduction
Test the relationship between strong/weak FTR and AAM, with and without controls for language family.
# Load libraries
```{r warning=F,message=F}
library(lme4)
library(sjPlot)
library(REEMtree)
library(rpart)
library(rpart.plot)
library(MASS)
library(ggplot2)
library(RColorBrewer)
library(MCMCglmm)
```
# Load data
```{r}
d = read.csv("../data/clean/data.csv",
fileEncoding = "utf-8",
encoding = 'utf-8')
```
Match each country to its main language and language family:
```{r}
countryMainLanguageFamily =
read.csv("../data/raw/CountryMainLanguageToLanguageFamily.csv",
stringsAsFactors = F)
d$mainLanguageFamily =
countryMainLanguageFamily[
match(as.character(d$loc),
countryMainLanguageFamily$Country.Code),
]$Family
```
Remove countries with many main language families:
```{r}
d$CountryHasManyMainLanguages = countryMainLanguageFamily[
match(as.character(d$loc),
countryMainLanguageFamily$Country.Code),
]$ManyLanguages=="Y"
d2 = d[!d$CountryHasManyMainLanguages,]
d2 = d2[!is.na(d2$AAM),]
keyVar = c("invpro","pd","indiv","mas",
"ua","lto","indul","ggr","SIZE",
"BTM","LEV","ROA","MEET","LOSS")
d2 = d2[complete.cases(d2[,keyVar,]),]
tapply(d2$strongftr,d2$mainLanguageFamily,unique)
tapply(d2$strongftr,d2$country,unique)
tapply(d2$strongftr,d2$loc,unique)
tapply(d2$strongftr,d2$loc,head,n=1)
tapply(d2$strongftr,as.character(d2$loc),head,n=1)
c("ARE","ARG","AUS","AUT","BEL","BGR","BMU","BRA","CAD","CAN","CHE","CHL","CHN","COL","CYP","CZE","DEU","DNK","EGY","ESP","FIN","FRA","GBR","GRC","HKG","HUN","IDN","IND","IRL","ISR","ITA","JOR","JPN","KEN","KOR","LKA","LTU","LUX","LVA","MAR","MEX","MYS","NGA","NLD","NOR","NZL","PAK","PER","PHL","POL","PRT","ROU","RUS","SGP","SWE","THA","TUN","TUR","TWN","USA","VNM","ZAF","ZWE") %in% as.character(d$loc)
c("ARE","ARG","AUS","AUT","BEL","BGR","BMU","BRA","CAD","CAN","CHE","CHL","CHN","COL","CYP","CZE","DEU","DNK","EGY","ESP","FIN","FRA","GBR","GRC","HKG","HUN","IDN","IND","IRL","ISR","ITA","JOR","JPN","KEN","KOR","LKA","LTU","LUX","LVA","MAR","MEX","MYS","NGA","NLD","NOR","NZL","PAK","PER","PHL","POL","PRT","ROU","RUS","SGP","SWE","THA","TUN","TUR","TWN","USA","VNM","ZAF","ZWE") %in% as.character(d2$loc)
library(ape)
library(caper)
library(phytools)
library(MCMCglmm)
tree = read.nexus(file = "../data/raw/trees/bouckaert_et_al2012-d-place_2.NEXUS")
dplaceLangs = countryMainLanguageFamily$DPlaceLang[countryMainLanguageFamily$DPlaceLang!=""]
tree = drop.tip(tree,tree$tip.label[!tree$tip.label %in% dplaceLangs])
plot(tree)
treePrint = tree
treePrint = tree
treePrint$tip.label= gsub(" ST","",treePrint$tip.label)
treePrint$tip.label= gsub(" Mod","",treePrint$tip.label)
treePrint = ladderize(treePrint)
plot(treePrint)
treePrint = tree
treePrint$tip.label= gsub(" ST","",treePrint$tip.label)
treePrint$tip.label= gsub(" Mod","",treePrint$tip.label)
treePrint = ladderize(treePrint)
plot(treePrint)
treePrint$tip.label
treePrint = tree
treePrint$tip.label= gsub("_ST","",treePrint$tip.label)
treePrint$tip.label= gsub(")Mod","",treePrint$tip.label)
treePrint = ladderize(treePrint)
plot(treePrint)
treePrint = tree
treePrint$tip.label= gsub("_ST","",treePrint$tip.label)
treePrint$tip.label= gsub("_Mod","",treePrint$tip.label)
treePrint$tip.label= gsub("_List","",treePrint$tip.label)
treePrint = ladderize(treePrint)
plot(treePrint)
pdf("../results/tree.pdf")
plot(treePrint)
dev.off()
?plot.phylo()
plot(treePrint, root.edge=T)
ape::plot.phylo(treePrint,root.edge = T)
?lines()
lines(c(0,0.5),c(1,1))
lines(c(0,0.5),c(0,0))
points(0:10)
points(0,0)
ape::plot.phylo(treePrint,root.edge = T)
points(0,0)
points(10,0)
points(10,10)
lines(c(0,0.5),c(10,10))
lines(c(0,10),c(10,10))
lines(c(0,1000),c(10,10))
lines(c(0,100),c(10,10))
lines(c(0,100),c(15,15))
lines(c(-100,0),c(15,15))
ape::plot.phylo(treePrint,root.edge = T)
lines(c(-100,0),c(15,15))
lines(c(-100,0),c(15.5,15.5))
ape::plot.phylo(treePrint,root.edge = T)
lines(c(-100,0),c(15.5,15.5))
ape::plot.phylo(treePrint,root.edge = T)
lines(c(-200,0),c(15.5,15.5))
pdf("../results/tree.pdf")
ape::plot.phylo(treePrint,root.edge = T)
lines(c(-200,0),c(15.5,15.5))
dev.off()
ape::plot.phylo(treePrint,root.edge = T,lwd=2)
lines(c(-200,0),c(15.5,15.5))
dev.off()
ape::plot.phylo(treePrint,root.edge = T,lwd=2)
ape::plot.phylo(treePrint,root.edge = T,lwd=10)
?plot.phylo
ape::plot.phylo(treePrint,root.edge = T,edge.width=10)
ape::plot.phylo(treePrint,root.edge = T,edge.width=10,label.offset = 100)
lines(c(-200,0),c(15.5,15.5))
pdf("../results/tree.pdf")
ape::plot.phylo(treePrint,root.edge = T,edge.width=8,label.offset = 100)
lines(c(-200,0),c(15.5,15.5))
dev.off()
ape::plot.phylo(treePrint,root.edge = T,edge.width=8,label.offset = 100)
lines(c(-200,0),c(15.5,15.5),lwd=8)
pdf("../results/tree.pdf")
ape::plot.phylo(treePrint,root.edge = T,edge.width=8,label.offset = 100)
lines(c(-200,0),c(15.5,15.5),lwd=8)
dev.off()
add.scale.bar()
add.scale.bar(length=8000)
axisPhylo()
pdf("../results/tree.pdf")
ape::plot.phylo(treePrint,root.edge = T,edge.width=8,label.offset = 100)
axisPhylo()
lines(c(-200,0),c(15.5,15.5),lwd=8)
dev.off()
axisPhylo(xlab="X")
title(xlab = "X")
title(xlab = "Years")
text("Years",0,200)
?text
text(0,200,"Years")
ape::plot.phylo(treePrint,root.edge = T,edge.width=8,label.offset = 100)
text(0,200,"Years")
text(1,200,"Years")
text(20,200,"Years")
text(20,1000,"Years")
text(20,0,"Years")
text(-200,15,"Years")
text(0,15,"Years")
text(0,120,"Years")
text(0,20,"Years")
text(05,"Years")
text(0,5,"Years")
text(0,0,"Years")
text(0,0,"Years",xpd=F)
text(0,0,"Years",xpd=T)
text(2000,0,"Years",xpd=T)
text(2500,0,"Years",xpd=T)
text(3000,0,"Years before present",xpd=T)
ape::plot.phylo(treePrint,root.edge = T,edge.width=8,label.offset = 100)
text(3000,-3,"Years before present",xpd=T)
lines(c(-200,0),c(15.5,15.5),lwd=8)
axisPhylo()
ape::plot.phylo(treePrint,root.edge = T,edge.width=8,label.offset = 100)
axisPhylo()
text(3000,-3.5,"Years before present",xpd=T)
lines(c(-200,0),c(15.5,15.5),lwd=8)
pdf("../results/tree.pdf")
ape::plot.phylo(treePrint,root.edge = T,edge.width=8,label.offset = 100)
axisPhylo()
text(3000,-3.5,"Years before present",xpd=T)
lines(c(-200,0),c(15.5,15.5),lwd=8)
dev.off()
pdf("../results/tree.pdf", width=8, height=4)
ape::plot.phylo(treePrint,root.edge = T,edge.width=8,label.offset = 100)
axisPhylo()
text(3000,-3.5,"Years before present",xpd=T)
lines(c(-200,0),c(15.5,15.5),lwd=8)
dev.off()
pdf("../results/tree.pdf", width=7, height=5)
ape::plot.phylo(treePrint,root.edge = T,edge.width=8,label.offset = 100)
axisPhylo()
text(3000,-3.5,"Years before present",xpd=T)
lines(c(-200,0),c(15.5,15.5),lwd=8)
dev.off()
pdf("../results/tree.pdf", width=7, height=5.5)
ape::plot.phylo(treePrint,root.edge = T,edge.width=8,label.offset = 100)
axisPhylo()
text(3000,-3.5,"Years before present",xpd=T)
lines(c(-200,0),c(15.5,15.5),lwd=8)
dev.off()
axisPhylo(xpd=T)
pdf("../results/tree.pdf", width=7, height=5.5)
ape::plot.phylo(treePrint,root.edge = T,edge.width=8,label.offset = 100)
axisPhylo(xpd=T)
text(3000,-3.5,"Years before present",xpd=T)
lines(c(-200,0),c(15.5,15.5),lwd=8)
dev.off()
