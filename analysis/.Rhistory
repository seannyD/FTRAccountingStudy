x_B2Points = (1:length(plotB2$data$term))+1
x_BPoints = x_B2Points + 0.33
x_APoints = x_B2Points + 0.66
plotBoth = function(showB=T){
par(mar=c(3,5,4,1))
plot(c(-0.5,0.5),c(1,15.5),type='n',yaxt='n',xlab="",ylab="")
abline(h=x_APoints-0.25,col="gray")
points(plotA$data$estimate,x_APoints,pch=16,col=plotColours[1])
arrows(plotA$data$conf.low,x_APoints,
plotA$data$conf.high,x_APoints,
code=3,angle = 90,length = 0.1)
if(showB){
points(plotB$data$estimate,x_BPoints,
col=plotColours[2],pch=16)
arrows(plotB$data$conf.low,x_BPoints,
plotB$data$conf.high,x_BPoints,
code=3,angle = 90,length = 0.1,col=plotColours[2])
points(plotB2$data$estimate,
x_B2Points,
col=plotColours[3],pch=16)
arrows(plotB2$data$conf.low,x_B2Points,
plotB$data$conf.high,x_B2Points,
code=3,angle = 90,length = 0.1,col=plotColours[3])
}
axis(2,at=x_APoints+0.25,labels = plotA$data$term,las=2)
abline(v=0)
legend(-0.4,19,xpd=T,legend=
c("Without language family controls",
"With language family controls",
"With langauge family contrls (and random slopes)"),
ncol=1,
lty=1,col=plotColours,
text.col=plotColours)
}
plotBoth()
plotColours = c("black",brewer.pal(3,"Set2")[2:1])
plotA = sjp.lmer(mA1,type="fe",p.kr = F,geom.colors = c(plotColours[1],plotColours[1]),prnt.plot = F)
plotB = sjp.lmer(mB1,type="fe",p.kr = F,geom.colors = c(plotColours[2],plotColours[2]),prnt.plot = F)
plotB2 = sjp.lmer(mB2,type="fe",p.kr = F,geom.colors = c(plotColours[3],plotColours[3]),prnt.plot = F)
x_B2Points = 1:length(plotB2$data$term)
x_BPoints = x_B2Points + 0.33
x_APoints = x_B2Points + 0.66
plotBoth = function(showB=T){
par(mar=c(3,5,4,1))
plot(c(-0.5,0.5),c(1,15.5),type='n',yaxt='n',xlab="",ylab="")
abline(h=x_APoints-0.25,col="gray")
points(plotA$data$estimate,x_APoints,pch=16,col=plotColours[1])
arrows(plotA$data$conf.low,x_APoints,
plotA$data$conf.high,x_APoints,
code=3,angle = 90,length = 0.1)
if(showB){
points(plotB$data$estimate,x_BPoints,
col=plotColours[2],pch=16)
arrows(plotB$data$conf.low,x_BPoints,
plotB$data$conf.high,x_BPoints,
code=3,angle = 90,length = 0.1,col=plotColours[2])
points(plotB2$data$estimate,
x_B2Points,
col=plotColours[3],pch=16)
arrows(plotB2$data$conf.low,x_B2Points,
plotB$data$conf.high,x_B2Points,
code=3,angle = 90,length = 0.1,col=plotColours[3])
}
axis(2,at=x_B2Points+0.25,labels = plotA$data$term,las=2)
abline(v=0)
legend(-0.4,19,xpd=T,legend=
c("Without language family controls",
"With language family controls",
"With langauge family contrls (and random slopes)"),
ncol=1,
lty=1,col=plotColours,
text.col=plotColours)
}
plotBoth()
abline(h=x_B2Points-0.25,col="gray")
plotColours = c("black",brewer.pal(3,"Set2")[2:1])
plotA = sjp.lmer(mA1,type="fe",p.kr = F,geom.colors = c(plotColours[1],plotColours[1]),prnt.plot = F)
plotB = sjp.lmer(mB1,type="fe",p.kr = F,geom.colors = c(plotColours[2],plotColours[2]),prnt.plot = F)
plotB2 = sjp.lmer(mB2,type="fe",p.kr = F,geom.colors = c(plotColours[3],plotColours[3]),prnt.plot = F)
x_B2Points = 1:length(plotB2$data$term)
x_BPoints = x_B2Points + 0.33
x_APoints = x_B2Points + 0.66
plotBoth = function(showB=T){
par(mar=c(3,5,4,1))
plot(c(-0.5,0.5),c(1,15.5),type='n',yaxt='n',xlab="",ylab="")
abline(h=x_B2Points-0.25,col="gray")
points(plotA$data$estimate,x_APoints,pch=16,col=plotColours[1])
arrows(plotA$data$conf.low,x_APoints,
plotA$data$conf.high,x_APoints,
code=3,angle = 90,length = 0.1)
if(showB){
points(plotB$data$estimate,x_BPoints,
col=plotColours[2],pch=16)
arrows(plotB$data$conf.low,x_BPoints,
plotB$data$conf.high,x_BPoints,
code=3,angle = 90,length = 0.1,col=plotColours[2])
points(plotB2$data$estimate,
x_B2Points,
col=plotColours[3],pch=16)
arrows(plotB2$data$conf.low,x_B2Points,
plotB$data$conf.high,x_B2Points,
code=3,angle = 90,length = 0.1,col=plotColours[3])
}
axis(2,at=x_B2Points+0.25,labels = plotA$data$term,las=2)
abline(v=0)
legend(-0.4,19,xpd=T,legend=
c("Without language family controls",
"With language family controls",
"With langauge family contrls (and random slopes)"),
ncol=1,
lty=1,col=plotColours,
text.col=plotColours)
}
plotBoth()
axis(2,at=x_APoints+0.25,labels = plotA$data$term,las=2)
x_B2Points = 1:length(plotB2$data$term)
x_BPoints = x_B2Points + 0.33
x_APoints = x_B2Points + 0.66
plotBoth = function(showB=T){
par(mar=c(3,5,4,1))
plot(c(-0.5,0.5),c(1,15.5),type='n',yaxt='n',xlab="",ylab="")
abline(h=x_B2Points-0.25,col="gray")
points(plotA$data$estimate,x_APoints,pch=16,col=plotColours[1])
arrows(plotA$data$conf.low,x_APoints,
plotA$data$conf.high,x_APoints,
code=3,angle = 90,length = 0.1)
if(showB){
points(plotB$data$estimate,x_BPoints,
col=plotColours[2],pch=16)
arrows(plotB$data$conf.low,x_BPoints,
plotB$data$conf.high,x_BPoints,
code=3,angle = 90,length = 0.1,col=plotColours[2])
points(plotB2$data$estimate,
x_B2Points,
col=plotColours[3],pch=16)
arrows(plotB2$data$conf.low,x_B2Points,
plotB$data$conf.high,x_B2Points,
code=3,angle = 90,length = 0.1,col=plotColours[3])
}
axis(2,at=x_B2Points+0.25,labels = plotA$data$term,las=2)
abline(v=0)
legend(-0.4,19,xpd=T,legend=
c("Without language family controls",
"With language family controls",
"With langauge family contrls (and random slopes)"),
ncol=1,
lty=1,col=plotColours,
text.col=plotColours)
}
plotBoth()
x_B2Points = 1:length(plotB2$data$term)
x_BPoints = x_B2Points + 0.33
x_APoints = x_B2Points + 0.66
plotBoth = function(showB=T){
par(mar=c(3,5,4,1))
plot(c(-0.5,0.5),c(1,15.5),type='n',yaxt='n',xlab="",ylab="")
abline(h=x_B2Points-0.33,col="gray")
points(plotA$data$estimate,x_APoints,pch=16,col=plotColours[1])
arrows(plotA$data$conf.low,x_APoints,
plotA$data$conf.high,x_APoints,
code=3,angle = 90,length = 0.1)
if(showB){
points(plotB$data$estimate,x_BPoints,
col=plotColours[2],pch=16)
arrows(plotB$data$conf.low,x_BPoints,
plotB$data$conf.high,x_BPoints,
code=3,angle = 90,length = 0.1,col=plotColours[2])
points(plotB2$data$estimate,
x_B2Points,
col=plotColours[3],pch=16)
arrows(plotB2$data$conf.low,x_B2Points,
plotB$data$conf.high,x_B2Points,
code=3,angle = 90,length = 0.1,col=plotColours[3])
}
axis(2,at=x_B2Points+0.25,labels = plotA$data$term,las=2)
abline(v=0)
legend(-0.4,19,xpd=T,legend=
c("Without language family controls",
"With language family controls",
"With langauge family contrls (and random slopes)"),
ncol=1,
lty=1,col=plotColours,
text.col=plotColours)
}
plotBoth()
abline(h=x_B2Points-0.15,col="gray")
x_B2Points = 1:length(plotB2$data$term)
x_BPoints = x_B2Points + 0.33
x_APoints = x_B2Points + 0.66
plotBoth = function(showB=T){
par(mar=c(3,5,4,1))
plot(c(-0.5,0.5),c(1,15.5),type='n',yaxt='n',xlab="",ylab="")
abline(h=x_B2Points-0.16,col="gray")
points(plotA$data$estimate,x_APoints,pch=16,col=plotColours[1])
arrows(plotA$data$conf.low,x_APoints,
plotA$data$conf.high,x_APoints,
code=3,angle = 90,length = 0.1)
if(showB){
points(plotB$data$estimate,x_BPoints,
col=plotColours[2],pch=16)
arrows(plotB$data$conf.low,x_BPoints,
plotB$data$conf.high,x_BPoints,
code=3,angle = 90,length = 0.1,col=plotColours[2])
points(plotB2$data$estimate,
x_B2Points,
col=plotColours[3],pch=16)
arrows(plotB2$data$conf.low,x_B2Points,
plotB$data$conf.high,x_B2Points,
code=3,angle = 90,length = 0.1,col=plotColours[3])
}
axis(2,at=x_B2Points+0.25,labels = plotA$data$term,las=2)
abline(v=0)
legend(-0.4,19,xpd=T,legend=
c("Without language family controls",
"With language family controls",
"With langauge family contrls (and random slopes)"),
ncol=1,
lty=1,col=plotColours,
text.col=plotColours)
}
plotBoth()
plotBoth = function(plotA,plotB,plotB2,showB=T){
par(mar=c(3,5,4,1))
plot(c(-0.5,0.5),c(1,15.5),type='n',yaxt='n',xlab="",ylab="")
abline(h=x_B2Points-0.16,col="gray")
points(plotA$data$estimate,x_APoints,pch=16,col=plotColours[1])
arrows(plotA$data$conf.low,x_APoints,
plotA$data$conf.high,x_APoints,
code=3,angle = 90,length = 0.1)
if(showB){
points(plotB$data$estimate,x_BPoints,
col=plotColours[2],pch=16)
arrows(plotB$data$conf.low,x_BPoints,
plotB$data$conf.high,x_BPoints,
code=3,angle = 90,length = 0.1,col=plotColours[2])
points(plotB2$data$estimate,
x_B2Points,
col=plotColours[3],pch=16)
arrows(plotB2$data$conf.low,x_B2Points,
plotB$data$conf.high,x_B2Points,
code=3,angle = 90,length = 0.1,col=plotColours[3])
}
axis(2,at=x_B2Points+0.25,labels = plotA$data$term,las=2)
abline(v=0)
legend(-0.4,19,xpd=T,legend=
c("Without language family controls",
"With language family controls",
"With langauge family contrls (and random slopes)"),
ncol=1,
lty=1,col=plotColours,
text.col=plotColours)
}
library(ape)
library(caper)
library(phytools)
library(MCMCglmm)
dIE = d[d$mainLanguageFamily=="Indo-European",]
dIE$DPlaceLang =
countryMainLanguageFamily[
match(as.character(dIE$loc),
countryMainLanguageFamily$Country.Code),
]$DPlaceLang
tree = read.nexus(file = "../data/raw/trees/bouckaert_et_al2012-d-place_2.NEXUS")
dplaceLangs = countryMainLanguageFamily$DPlaceLang[countryMainLanguageFamily$DPlaceLang!=""]
tree = drop.tip(tree,tree$tip.label[!tree$tip.label %in% dplaceLangs])
DP.FTR = factor(tapply(dIE$strongftr,dIE$DPlaceLang,head,n=1))
DP.AAM = scale(tapply(dIE$AAM,dIE$DPlaceLang,mean,na.rm=T))
cdata = data.frame(
FTR = DP.FTR,
AAM = DP.AAM,
lang = names(DP.FTR)
)
cdata = cdata[cdata$lang!="",]
cdata$id = cdata$lang
library(ggtree)
library(ggstance)
p <- ggtree(tree)
p1 <- p %<+% cdata + geom_tippoint(aes(color=FTR))
p1
p2 <- facet_plot(p1, panel="dot", data=d2, geom=geom_point,
aes(x=AAM), color='firebrick') + theme_tree2()
prior.PN<-list(
G=list(
G1=list(V=1,nu=0.002)),
R=list(V=1,nu=0.002))
# Chain length
burnin = 1000
postBurnin =10000
thin = 10
# Run the model
phyloModel0<-MCMCglmm(
AAM ~ FTR,
random=~lang,
ginverse=list(
lang=inverseA(tree)$Ainv),
prior = prior.PN,
verbose=FALSE,
family="gaussian",
data = cdata,
nitt=burnin+postBurnin,
thin=thin,
burnin=burnin)
summary(phyloModel0)
prior.PN<-list(
G=list(
G1=list(V=1,nu=0.002)),
R=list(V=1,nu=0.002))
# Chain length
burnin = 10000
postBurnin =100000
thin = 10
# Run the model
phyloModel0<-MCMCglmm(
AAM ~ FTR,
random=~lang,
ginverse=list(
lang=inverseA(tree)$Ainv),
prior = prior.PN,
verbose=FALSE,
family="gaussian",
data = cdata,
nitt=burnin+postBurnin,
thin=thin,
burnin=burnin)
summary(phyloModel0)
plot(phyloModel0)
prior.PN<-list(
G=list(
G1=list(V=1,nu=0.002)),
R=list(V=1,nu=0.002))
# Chain length
burnin = 50000
postBurnin =100000
thin = 10
# Run the model
phyloModel0<-MCMCglmm(
AAM ~ FTR,
random=~lang,
ginverse=list(
lang=inverseA(tree)$Ainv),
prior = prior.PN,
verbose=FALSE,
family="gaussian",
data = cdata,
nitt=burnin+postBurnin,
thin=thin,
burnin=burnin)
summary(phyloModel0)
plot(phyloModel0)
p <- ggtree(tree)
p1 <- p %<+% cdata + geom_tippoint(aes(color=FTR))
p1
p <- ggtree(tree)
p1 <- p %<+% cdata + geom_tippoint(aes(color=FTR))
p1
cdata$FTR
p <- ggtree(tree,colour = FTR)
p1 <- p %<+% cdata + geom_tippoint(aes(color=FTR))
p1
?"ggtree"
plotBoth = function(plotA,plotB,plotB2,showB=T){
par(mar=c(3,5,4,1))
plot(c(-0.5,0.5),c(1,15.5),type='n',yaxt='n',xlab="",ylab="")
abline(h=x_B2Points-0.16,col="gray")
points(plotA$data$estimate,x_APoints,pch=16,col=plotColours[1])
arrows(plotA$data$conf.low,x_APoints,
plotA$data$conf.high,x_APoints,
code=3,angle = 90,length = 0.1)
if(showB){
points(plotB$data$estimate,x_BPoints,
col=plotColours[2],pch=16)
arrows(plotB$data$conf.low,x_BPoints,
plotB$data$conf.high,x_BPoints,
code=3,angle = 90,length = 0.1,col=plotColours[2])
points(plotB2$data$estimate,
x_B2Points,
col=plotColours[3],pch=16)
arrows(plotB2$data$conf.low,x_B2Points,
plotB$data$conf.high,x_B2Points,
code=3,angle = 90,length = 0.1,col=plotColours[3])
}
axis(2,at=x_B2Points+0.25,labels = plotA$data$term,las=2)
abline(v=0)
legend(-0.4,20,bty='n',
xpd=T,legend=
c("Without language family controls",
"With language family controls",
"With langauge family contrls (and random slopes)"),
ncol=1,
lty=1,col=plotColours,
text.col=plotColours)
}
plotBoth(plotA,plotB,plotB2)
pdf("../results/singleMembershipModel.pdf",
width=6,height=5)
plotBoth(plotA,plotB,plotB2)
dev.off()
plotBoth = function(plotA,plotB,plotB2,showB=T){
par(mar=c(3,5,4,1))
plot(c(-0.5,0.5),c(1,15.5),type='n',yaxt='n',xlab="",ylab="")
abline(h=x_B2Points-0.16,col="gray")
points(plotA$data$estimate,x_APoints,pch=16,col=plotColours[1])
arrows(plotA$data$conf.low,x_APoints,
plotA$data$conf.high,x_APoints,
code=3,angle = 90,length = 0.1)
if(showB){
points(plotB$data$estimate,x_BPoints,
col=plotColours[2],pch=16)
arrows(plotB$data$conf.low,x_BPoints,
plotB$data$conf.high,x_BPoints,
code=3,angle = 90,length = 0.1,col=plotColours[2])
points(plotB2$data$estimate,
x_B2Points,
col=plotColours[3],pch=16)
arrows(plotB2$data$conf.low,x_B2Points,
plotB$data$conf.high,x_B2Points,
code=3,angle = 90,length = 0.1,col=plotColours[3])
}
axis(2,at=x_B2Points+0.25,labels = plotA$data$term,las=2)
abline(v=0)
legend(-0.4,19.5,bty='n',
xpd=T,legend=
c("Without language family controls",
"With language family controls",
"With langauge family contrls (and random slopes)"),
ncol=1,
lty=1,col=plotColours,
text.col=plotColours)
}
plotBoth(plotA,plotB,plotB2)
pdf("../results/singleMembershipModel.pdf",
width=6,height=5)
plotBoth(plotA,plotB,plotB2)
dev.off()
plotBoth = function(plotA,plotB,plotB2,showB=T){
par(mar=c(3,5,4,1))
plot(c(-0.5,0.5),c(1,15.5),type='n',yaxt='n',xlab="",ylab="")
abline(h=x_B2Points-0.16,col="gray")
points(plotA$data$estimate,x_APoints,pch=16,col=plotColours[1])
arrows(plotA$data$conf.low,x_APoints,
plotA$data$conf.high,x_APoints,
code=3,angle = 90,length = 0.1)
if(showB){
points(plotB$data$estimate,x_BPoints,
col=plotColours[2],pch=16)
arrows(plotB$data$conf.low,x_BPoints,
plotB$data$conf.high,x_BPoints,
code=3,angle = 90,length = 0.1,col=plotColours[2])
points(plotB2$data$estimate,
x_B2Points,
col=plotColours[3],pch=16)
arrows(plotB2$data$conf.low,x_B2Points,
plotB$data$conf.high,x_B2Points,
code=3,angle = 90,length = 0.1,col=plotColours[3])
}
axis(2,at=x_B2Points+0.25,labels = plotA$data$term,las=2)
abline(v=0)
legend(-0.5,19.5,bty='n',
xpd=T,legend=
c("Without language family controls",
"With language family controls",
"With langauge family contrls (and random slopes)"),
ncol=1,
lty=1,col=plotColours,
text.col=plotColours)
}
plotBoth(plotA,plotB,plotB2)
pdf("../results/singleMembershipModel.pdf",
width=6,height=5)
plotBoth(plotA,plotB,plotB2)
dev.off()
plotBoth = function(plotA,plotB,plotB2,showB=T){
par(mar=c(3,5,4,1))
plot(c(-0.5,0.5),c(1,15.5),type='n',yaxt='n',xlab="",ylab="")
abline(h=x_B2Points-0.16,col="gray")
points(plotA$data$estimate,x_APoints,pch=16,col=plotColours[1])
arrows(plotA$data$conf.low,x_APoints,
plotA$data$conf.high,x_APoints,
code=3,angle = 90,length = 0.1)
if(showB){
points(plotB$data$estimate,x_BPoints,
col=plotColours[2],pch=16)
arrows(plotB$data$conf.low,x_BPoints,
plotB$data$conf.high,x_BPoints,
code=3,angle = 90,length = 0.1,col=plotColours[2])
points(plotB2$data$estimate,
x_B2Points,
col=plotColours[3],pch=16)
arrows(plotB2$data$conf.low,x_B2Points,
plotB$data$conf.high,x_B2Points,
code=3,angle = 90,length = 0.1,col=plotColours[3])
}
axis(2,at=x_B2Points+0.25,labels = plotA$data$term,las=2)
abline(v=0)
legend(-0.5,19.5,bty='n',
xpd=T,legend=
c("Without language family controls",
"With language family controls",
"With langauge family controls (and random slopes)"),
ncol=1,
lty=1,col=plotColours,
text.col=plotColours)
}
plotBoth(plotA,plotB,plotB2)
pdf("../results/singleMembershipModel.pdf",
width=6,height=5)
plotBoth(plotA,plotB,plotB2)
dev.off()
pdf("../results/singleMembershipModel_AOnly.pdf",
width=6,height=5)
plotBoth(plotA,plotB,plotB2,F)
dev.off()
